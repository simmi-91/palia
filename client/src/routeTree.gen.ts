/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as WormfarmRouteImport } from './routes/wormfarm'
import { Route as WikiRouteImport } from './routes/wiki'
import { Route as TradeRouteImport } from './routes/trade'
import { Route as RanchingRouteImport } from './routes/ranching'
import { Route as ProfileRouteImport } from './routes/profile'
import { Route as PaliatrackerRouteImport } from './routes/paliatracker'
import { Route as GardenRouteImport } from './routes/garden'
import { Route as CatchRouteImport } from './routes/catch'
import { Route as AdminRouteImport } from './routes/admin'
import { Route as IndexRouteImport } from './routes/index'
import { Route as WikiIndexRouteImport } from './routes/wiki/index'
import { Route as AdminIndexRouteImport } from './routes/admin/index'
import { Route as WikiStickersRouteImport } from './routes/wiki/stickers'
import { Route as WikiPotatopodsRouteImport } from './routes/wiki/potatopods'
import { Route as WikiPlushiesRouteImport } from './routes/wiki/plushies'
import { Route as WikiFishRouteImport } from './routes/wiki/fish'
import { Route as WikiBugsRouteImport } from './routes/wiki/bugs'
import { Route as WikiArtifactsRouteImport } from './routes/wiki/artifacts'
import { Route as AdminEditItemsRouteImport } from './routes/admin/edit-items'

const WormfarmRoute = WormfarmRouteImport.update({
  id: '/wormfarm',
  path: '/wormfarm',
  getParentRoute: () => rootRouteImport,
} as any)
const WikiRoute = WikiRouteImport.update({
  id: '/wiki',
  path: '/wiki',
  getParentRoute: () => rootRouteImport,
} as any)
const TradeRoute = TradeRouteImport.update({
  id: '/trade',
  path: '/trade',
  getParentRoute: () => rootRouteImport,
} as any)
const RanchingRoute = RanchingRouteImport.update({
  id: '/ranching',
  path: '/ranching',
  getParentRoute: () => rootRouteImport,
} as any)
const ProfileRoute = ProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRouteImport,
} as any)
const PaliatrackerRoute = PaliatrackerRouteImport.update({
  id: '/paliatracker',
  path: '/paliatracker',
  getParentRoute: () => rootRouteImport,
} as any)
const GardenRoute = GardenRouteImport.update({
  id: '/garden',
  path: '/garden',
  getParentRoute: () => rootRouteImport,
} as any)
const CatchRoute = CatchRouteImport.update({
  id: '/catch',
  path: '/catch',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminRoute = AdminRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const WikiIndexRoute = WikiIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => WikiRoute,
} as any)
const AdminIndexRoute = AdminIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AdminRoute,
} as any)
const WikiStickersRoute = WikiStickersRouteImport.update({
  id: '/stickers',
  path: '/stickers',
  getParentRoute: () => WikiRoute,
} as any)
const WikiPotatopodsRoute = WikiPotatopodsRouteImport.update({
  id: '/potatopods',
  path: '/potatopods',
  getParentRoute: () => WikiRoute,
} as any)
const WikiPlushiesRoute = WikiPlushiesRouteImport.update({
  id: '/plushies',
  path: '/plushies',
  getParentRoute: () => WikiRoute,
} as any)
const WikiFishRoute = WikiFishRouteImport.update({
  id: '/fish',
  path: '/fish',
  getParentRoute: () => WikiRoute,
} as any)
const WikiBugsRoute = WikiBugsRouteImport.update({
  id: '/bugs',
  path: '/bugs',
  getParentRoute: () => WikiRoute,
} as any)
const WikiArtifactsRoute = WikiArtifactsRouteImport.update({
  id: '/artifacts',
  path: '/artifacts',
  getParentRoute: () => WikiRoute,
} as any)
const AdminEditItemsRoute = AdminEditItemsRouteImport.update({
  id: '/edit-items',
  path: '/edit-items',
  getParentRoute: () => AdminRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteWithChildren
  '/catch': typeof CatchRoute
  '/garden': typeof GardenRoute
  '/paliatracker': typeof PaliatrackerRoute
  '/profile': typeof ProfileRoute
  '/ranching': typeof RanchingRoute
  '/trade': typeof TradeRoute
  '/wiki': typeof WikiRouteWithChildren
  '/wormfarm': typeof WormfarmRoute
  '/admin/edit-items': typeof AdminEditItemsRoute
  '/wiki/artifacts': typeof WikiArtifactsRoute
  '/wiki/bugs': typeof WikiBugsRoute
  '/wiki/fish': typeof WikiFishRoute
  '/wiki/plushies': typeof WikiPlushiesRoute
  '/wiki/potatopods': typeof WikiPotatopodsRoute
  '/wiki/stickers': typeof WikiStickersRoute
  '/admin/': typeof AdminIndexRoute
  '/wiki/': typeof WikiIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/catch': typeof CatchRoute
  '/garden': typeof GardenRoute
  '/paliatracker': typeof PaliatrackerRoute
  '/profile': typeof ProfileRoute
  '/ranching': typeof RanchingRoute
  '/trade': typeof TradeRoute
  '/wormfarm': typeof WormfarmRoute
  '/admin/edit-items': typeof AdminEditItemsRoute
  '/wiki/artifacts': typeof WikiArtifactsRoute
  '/wiki/bugs': typeof WikiBugsRoute
  '/wiki/fish': typeof WikiFishRoute
  '/wiki/plushies': typeof WikiPlushiesRoute
  '/wiki/potatopods': typeof WikiPotatopodsRoute
  '/wiki/stickers': typeof WikiStickersRoute
  '/admin': typeof AdminIndexRoute
  '/wiki': typeof WikiIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteWithChildren
  '/catch': typeof CatchRoute
  '/garden': typeof GardenRoute
  '/paliatracker': typeof PaliatrackerRoute
  '/profile': typeof ProfileRoute
  '/ranching': typeof RanchingRoute
  '/trade': typeof TradeRoute
  '/wiki': typeof WikiRouteWithChildren
  '/wormfarm': typeof WormfarmRoute
  '/admin/edit-items': typeof AdminEditItemsRoute
  '/wiki/artifacts': typeof WikiArtifactsRoute
  '/wiki/bugs': typeof WikiBugsRoute
  '/wiki/fish': typeof WikiFishRoute
  '/wiki/plushies': typeof WikiPlushiesRoute
  '/wiki/potatopods': typeof WikiPotatopodsRoute
  '/wiki/stickers': typeof WikiStickersRoute
  '/admin/': typeof AdminIndexRoute
  '/wiki/': typeof WikiIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/admin'
    | '/catch'
    | '/garden'
    | '/paliatracker'
    | '/profile'
    | '/ranching'
    | '/trade'
    | '/wiki'
    | '/wormfarm'
    | '/admin/edit-items'
    | '/wiki/artifacts'
    | '/wiki/bugs'
    | '/wiki/fish'
    | '/wiki/plushies'
    | '/wiki/potatopods'
    | '/wiki/stickers'
    | '/admin/'
    | '/wiki/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/catch'
    | '/garden'
    | '/paliatracker'
    | '/profile'
    | '/ranching'
    | '/trade'
    | '/wormfarm'
    | '/admin/edit-items'
    | '/wiki/artifacts'
    | '/wiki/bugs'
    | '/wiki/fish'
    | '/wiki/plushies'
    | '/wiki/potatopods'
    | '/wiki/stickers'
    | '/admin'
    | '/wiki'
  id:
    | '__root__'
    | '/'
    | '/admin'
    | '/catch'
    | '/garden'
    | '/paliatracker'
    | '/profile'
    | '/ranching'
    | '/trade'
    | '/wiki'
    | '/wormfarm'
    | '/admin/edit-items'
    | '/wiki/artifacts'
    | '/wiki/bugs'
    | '/wiki/fish'
    | '/wiki/plushies'
    | '/wiki/potatopods'
    | '/wiki/stickers'
    | '/admin/'
    | '/wiki/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminRoute: typeof AdminRouteWithChildren
  CatchRoute: typeof CatchRoute
  GardenRoute: typeof GardenRoute
  PaliatrackerRoute: typeof PaliatrackerRoute
  ProfileRoute: typeof ProfileRoute
  RanchingRoute: typeof RanchingRoute
  TradeRoute: typeof TradeRoute
  WikiRoute: typeof WikiRouteWithChildren
  WormfarmRoute: typeof WormfarmRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/wormfarm': {
      id: '/wormfarm'
      path: '/wormfarm'
      fullPath: '/wormfarm'
      preLoaderRoute: typeof WormfarmRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/wiki': {
      id: '/wiki'
      path: '/wiki'
      fullPath: '/wiki'
      preLoaderRoute: typeof WikiRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/trade': {
      id: '/trade'
      path: '/trade'
      fullPath: '/trade'
      preLoaderRoute: typeof TradeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/ranching': {
      id: '/ranching'
      path: '/ranching'
      fullPath: '/ranching'
      preLoaderRoute: typeof RanchingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/paliatracker': {
      id: '/paliatracker'
      path: '/paliatracker'
      fullPath: '/paliatracker'
      preLoaderRoute: typeof PaliatrackerRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/garden': {
      id: '/garden'
      path: '/garden'
      fullPath: '/garden'
      preLoaderRoute: typeof GardenRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/catch': {
      id: '/catch'
      path: '/catch'
      fullPath: '/catch'
      preLoaderRoute: typeof CatchRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/wiki/': {
      id: '/wiki/'
      path: '/'
      fullPath: '/wiki/'
      preLoaderRoute: typeof WikiIndexRouteImport
      parentRoute: typeof WikiRoute
    }
    '/admin/': {
      id: '/admin/'
      path: '/'
      fullPath: '/admin/'
      preLoaderRoute: typeof AdminIndexRouteImport
      parentRoute: typeof AdminRoute
    }
    '/wiki/stickers': {
      id: '/wiki/stickers'
      path: '/stickers'
      fullPath: '/wiki/stickers'
      preLoaderRoute: typeof WikiStickersRouteImport
      parentRoute: typeof WikiRoute
    }
    '/wiki/potatopods': {
      id: '/wiki/potatopods'
      path: '/potatopods'
      fullPath: '/wiki/potatopods'
      preLoaderRoute: typeof WikiPotatopodsRouteImport
      parentRoute: typeof WikiRoute
    }
    '/wiki/plushies': {
      id: '/wiki/plushies'
      path: '/plushies'
      fullPath: '/wiki/plushies'
      preLoaderRoute: typeof WikiPlushiesRouteImport
      parentRoute: typeof WikiRoute
    }
    '/wiki/fish': {
      id: '/wiki/fish'
      path: '/fish'
      fullPath: '/wiki/fish'
      preLoaderRoute: typeof WikiFishRouteImport
      parentRoute: typeof WikiRoute
    }
    '/wiki/bugs': {
      id: '/wiki/bugs'
      path: '/bugs'
      fullPath: '/wiki/bugs'
      preLoaderRoute: typeof WikiBugsRouteImport
      parentRoute: typeof WikiRoute
    }
    '/wiki/artifacts': {
      id: '/wiki/artifacts'
      path: '/artifacts'
      fullPath: '/wiki/artifacts'
      preLoaderRoute: typeof WikiArtifactsRouteImport
      parentRoute: typeof WikiRoute
    }
    '/admin/edit-items': {
      id: '/admin/edit-items'
      path: '/edit-items'
      fullPath: '/admin/edit-items'
      preLoaderRoute: typeof AdminEditItemsRouteImport
      parentRoute: typeof AdminRoute
    }
  }
}

interface AdminRouteChildren {
  AdminEditItemsRoute: typeof AdminEditItemsRoute
  AdminIndexRoute: typeof AdminIndexRoute
}

const AdminRouteChildren: AdminRouteChildren = {
  AdminEditItemsRoute: AdminEditItemsRoute,
  AdminIndexRoute: AdminIndexRoute,
}

const AdminRouteWithChildren = AdminRoute._addFileChildren(AdminRouteChildren)

interface WikiRouteChildren {
  WikiArtifactsRoute: typeof WikiArtifactsRoute
  WikiBugsRoute: typeof WikiBugsRoute
  WikiFishRoute: typeof WikiFishRoute
  WikiPlushiesRoute: typeof WikiPlushiesRoute
  WikiPotatopodsRoute: typeof WikiPotatopodsRoute
  WikiStickersRoute: typeof WikiStickersRoute
  WikiIndexRoute: typeof WikiIndexRoute
}

const WikiRouteChildren: WikiRouteChildren = {
  WikiArtifactsRoute: WikiArtifactsRoute,
  WikiBugsRoute: WikiBugsRoute,
  WikiFishRoute: WikiFishRoute,
  WikiPlushiesRoute: WikiPlushiesRoute,
  WikiPotatopodsRoute: WikiPotatopodsRoute,
  WikiStickersRoute: WikiStickersRoute,
  WikiIndexRoute: WikiIndexRoute,
}

const WikiRouteWithChildren = WikiRoute._addFileChildren(WikiRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminRoute: AdminRouteWithChildren,
  CatchRoute: CatchRoute,
  GardenRoute: GardenRoute,
  PaliatrackerRoute: PaliatrackerRoute,
  ProfileRoute: ProfileRoute,
  RanchingRoute: RanchingRoute,
  TradeRoute: TradeRoute,
  WikiRoute: WikiRouteWithChildren,
  WormfarmRoute: WormfarmRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
